[input]
csvFile = ../Data/trainOnThis_indexCalc.csv

header = 0 
dateColumn = None
columns = 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32
look_back = 1
y_column = 32
winLength = 2
timeInterval = 1
trainTestSplit = 0.1
smoothingParam = 3
    
## reference value for normalisation
refvalue = 2000.0


datetopred = 2017-05-30

[switches]
verbosity = 1
## train on windows? 
windowedData = on
split = on
## normalise and partition data, options are: 
## make windows and normalise windows (on ref. value) = 3
normalise = 4
smoothingSwitch = off

[analysis]
plotting = on
evalMetrics = on

[network]
## prediction of time series: timeDistributed=on ; single point in time: timeDistributed=off
timeDistributed=off
attention=on
doubleattention=on
cnn = off
bidirect = off
batchnorm = on
stateful=off
inputDim = 31
earlyStop = 0.001
# prediction of single point in time
# prediction of time series
neuronsPerLayer = 128,128
outputLength = 1
outputDim = 1
## if you choose selu as activation function dont use batchnormalisation
activationPerLayer = sigmoid
recurrentActivation = hard_sigmoid
initWeights = uniform
dropout = 0.3
optimiser = adam
learningRate = 0.01
decay = 0.1
l1=0.0
l2=0.01
gaussianNoise=off
loss = mse
epochs = 3
batchSize = 1
## Tensorflow loglevel, 0 = all, 1 = no info, 2 = no warning, 3 = no error
loglevel = 2
## batch normalisation

[tuning]
## if hyperparamter tuning should be done or not
tuning = off
## number of layers that should be tested
nlayer_tune = 4
## activation functions that should be tested
actlayer_tune = relu,elu,tanh,sigmoid
## recurrent activation tune
recactlayer_tune = hard_sigmoid
## number of hidden units that should be tested
nhiduplayer_tune = 50,100,150,200
## which dropout parameters should be tested
dropout_tune = 0.1,0.15,0.2,0.3
## learning rates
## lr_tune = 0.0001,0.001,0.01,0.1
lr_tune = 0.0001,0.0001
## batchsizes
batchsize_tune = 256,512,1024
## batch normalisation
batchnorm_tune = on,off


[output]
predictionFile = ../Data/predictions.csv
bestParams = ../Data/tuned.params
jsonFile = ../Data/normTest.json
modelFile = ../Data/normTest.h5

